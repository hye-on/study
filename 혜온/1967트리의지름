#include<iostream>
#include<vector>

using namespace std;

int n,Max=0;
vector<pair<int,int>>node[10001];
bool check[10001];



void dfs(int Node,int sum)
{
	
	//cout << Node << endl;
	if (node[Node].size() == 1&&!check[Node])
	{
		if (sum > Max)
			Max = sum;

		//cout << "sum" <<sum<< endl;
		
		return;
	}
	check[Node] = true;

	for (int i = 0; i < node[Node].size(); i++)
	{
		if (!check[(node[Node][i].first)])
		{
			//sum += node[Node][i].second;
			dfs(node[Node][i].first,sum += node[Node][i].second);
			sum -= node[Node][i].second;
		}
	}
}


int main()
{
	cin >> n;
	n--;
	int n2 = n+1;
	int a, b, c;
	while (n--)
	{
		cin >> a >> b >> c;
		
		node[a].push_back(make_pair(b,c));
		node[b].push_back(make_pair(a, c));
		//cout << node[a][0].first << "  " << node[a][0].second << endl;
	}

	for(int i=1;i<=n2;i++)
	{
		//cout << "2222" << endl;
		//cout << node[i].size() << endl;
		if (node[i].size() == 1)
		{
			check[i] = true;
			dfs(i,0);
			memset(check, 0, sizeof(check));
			//sum = 0;
		}
	}
	cout << Max;
	
}
