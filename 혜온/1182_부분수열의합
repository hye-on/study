#include<iostream>
#include<cmath>

using namespace std;
int sum = 0;
int N, S,ans=0;
int num[20];

void dfs(int sum, int index)
{
	if (index >= N)
		return;
	if (sum + num[index] == S)
		ans++;
	dfs(sum + num[index], index + 1);
	dfs(sum, index + 1);
}

int main()
{
	
	cin >> N >> S;
	for (int i = 0; i < N; i++)
		cin >> num[i];

	dfs(sum,0);
	cout << ans;
	//int min = 100000000,index=0;
	//
	//for (int i = 0; i < N; i++)
	//{
	//	cin >> num[i];
	//	
	//}
	////오름차순 정렬
	//int temp=0;
	//for(int i=0;i<N;i++)
	//	for (int j = i+1;j < N; j++)
	//	{
	//		if (num[i] > num[j])
	//		{
	//			temp = num[j];
	//			num[j] = num[i];
	//			num[i] = temp;
	//		}
	//	}
	//for (int i = 0; i < N; i++)
	//{
	//	if (abs(S - num[i]) < min)
	//	{
	//		index = i;
	//		min = abs(S - num[i]);
	//	}
	//}
	//cout << index << endl;
	//
	//	
	//int indexPlus = index,indexMinus=index-1,count=0,plus=0;
	//if (S == 0)
	//{
	//	plus += num[indexPlus++];
	//}
	//while (true)
	//{
	//	/*cout << S<<"  "<<plus <<endl;
	//	cout << indexPlus << "  " << indexMinus << endl;*/
	//	if (!(indexMinus == indexPlus) && plus == S)
	//	{
	//		count++;
	//	}
	//	if (indexPlus ==N-1 && indexMinus  ==0)
	//	{
	//		break;
	//	}
	//	if(plus>S)
	//	{ 
	//		//cout << "a" << endl;
	//		plus += num[indexMinus--];
	//	}
	//	else if(plus<S)
	//	{
	//		//cout << "b" << endl;
	//	
	//		plus += num[indexPlus++];

	//	}
	//	
	//	else
	//	{
	//		indexPlus++;
	//		indexMinus--;
	//	}
	//	
	//	
	//}

	

}
