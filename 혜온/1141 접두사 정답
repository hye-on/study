#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>

using namespace std;
//bool compare(string a, string b)
//{
//	if (a[0] < b[0])
//		return true;
//	else if (a[0] == b[0])
//		if (a.length() < b.length())
//			return true;
//		else
//			return false;
//	else
//		return false;
//	
//
//}

bool compare(string a, string b)
{
	if (a.length() > b.length())
		return true;
	else
		return false;
}


int main()
{
	int N, cnt = 1, max = -1;
	bool check;
	int answer = 0;
	cin >> N;
	string head[50];

	for (int i = 0; i < N; i++)
	{
		cin >> head[i];

	}
	sort(head, head + N, compare);

	
	for (int i = 1; i < N; i++)
	{
		check = true;
		for (int j = i-1; j >= 0; j--)
		{
			//cout << i << "  " << j << endl;
			if (head[j].find(head[i])==0)
			{
				//cout << head[i] << " "<<head[j] << endl;
				check = false;
			}
		}
		if (check)
			cnt++;
	}
	cout << cnt;

}



	//cout << aToZ[head[0][0]-'a'] << "    dl"<<endl;;
	//sort(head, head + N, compare);
	/*for (int i = 0; i < N; i++)
	{
		
		cout << head[i] << endl;
	}*/
	
	//for (int i =0; i <N; i+= aToZ[head[i][0]-'a'])
	//{
	//	//cout << i << " s " << endl;
	//	max = 0;
	//	
	//	for(int k=i;k< aToZ[head[i][0]-'a']+i;k++)
	//	{
	//		cnt = 0;
	//		
	//		cout << "k" << "        " << k << endl;
	//		for (int j = k + 1; j < aToZ[head[i][0] - 'a'] + i; j++)
	//		{
	//			
	//				if (head[j].find(head[k]) != 0)
	//				{
	//					cout << head[j] << " "<<head[k] << endl;
	//					cnt++;
	//				}
	//			

	//			
	//		}
	//		if (cnt >= max)
	//			max = cnt;
	//	}
	//	cout << max << "ddd"<<endl;
	//	answer += max;

	//}
	//cout <<answer;
	//
