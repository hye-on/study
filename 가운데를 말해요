#include<iostream>
#include<functional>
#include<queue>
using namespace std;

int main(void) {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	priority_queue<int, vector<int>, less<int>> pqmax; //최대 힙
	priority_queue<int, vector<int>, greater<int>> pqmin; //최소 힙
	int mid;
	int n;
	cin >> n;
	int i = 0;

	while (n--) {
		int k;
		cin >> k;

		if (i == 0) {
			mid = k;
			i++;
		}
		else {
			if (k >= mid) pqmin.push(k);
			else if (k < mid) pqmax.push(k);

			int minsize = pqmin.size();
			int maxsize = pqmax.size();

			if ((minsize + maxsize + 1) % 2 == 0) {
				//전체 짝수개라면
				if (minsize <= maxsize) {
					int tmp = mid;
					mid = pqmax.top();
					pqmax.pop();
					pqmin.push(tmp);
				}
			}
			else {
				//전체 홀수개라면 
				if (minsize < maxsize) {
					pqmin.push(mid);
					mid = pqmax.top();
					pqmax.pop();
				}
				else if (minsize > maxsize) {
					pqmax.push(mid);
					mid = pqmin.top();
					pqmin.pop();
				}
			}
		}
		cout << mid << '\n';
	}
	return 0;
}
//#include<algorithm>
//using namespace std;
//
//int main()
//{
//	
//	int N;
//	cin >> N;
//	int mm[100000];
//	int answer[100000];
//	for (int i = 0; i < N; i++) 
//	{
//		
//		cin >> mm[i];
//		
//		
//	}
//	answer[0] = mm[0];
//
//	for (int i = 1; i < N; i++)
//	{
//		sort(mm, mm +(i+1));
//		if (i % 2 == 0)//i=2일떄  홀수번째이다.
//		{
//
//			answer[i] = mm[i / 2 ];       // 1  2 5 
//		}
//		else //i=1일때 짝수번째이다. 1 5 2 10 -99 7 5    -99 1 2 5 5 7 10      
//		{
//			if (mm[i / 2] < mm[i / 2 + 1])
//				answer[i] = mm[i / 2];
//			else
//				answer[i] = mm[i / 2 + 1];
//		}
//		
//	}
//	for (int j = 0; j <N; j++)
//		cout << answer[j] << " ";
//
//}
