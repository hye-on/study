#include<iostream>
#include<string>
#include<vector>

using namespace std;


int N;
int w, h, number, a, b;

int bc[51][51] = { 0 };
bool check[51][51] = { false };

int dx[] = { 1, 0 ,-1,0 };
int dy[] = { 0,-1 ,0, 1 };
void dfs(int x, int y)
{
	
	check[x][y] = true;
	for (int i = 0; i < 4; i++)
	{
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (nx < 0 || ny < 0 || nx >= h || ny >= w)
			continue;
		if (!check[nx][ny] && bc[nx][ny] == 1)
			dfs(nx, ny);
	}
}

int main()
{
	
	
	cin >> N;
	while (N--)
	{
		memset(check, false, sizeof(check));
		memset(bc, false, sizeof(bc));
		

		
		int cnt = 0;
		cin >> w >> h >> number;
		for (int i = 0; i < number; i++)
		{
			cin >> a >> b;
			bc[b][a] = 1;
		}

		for (int i = 0; i < h; i++)
			for (int j = 0; j < w; j++)
			{
				if (!check[i][j] && bc[i][j] == 1)
				{
					cnt++;
					dfs(i, j);
					
					

				}
			}
		

		cout << cnt << endl;
		
	}
	
	
	
}
